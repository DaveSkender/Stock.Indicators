name: Deploy NuGet package

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment environment
        type: choice
        options:
          - azure-artifacts
          - nuget
        default: azure-artifacts
        required: true
      preview:
        description: Append preview suffix
        type: boolean
        default: true
        required: true

concurrency:
  group: ${{ inputs.environment }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.compose.version }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
          preferLatestVersion: true

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          updateAssemblyInfo: true
          useConfigFile: true
          configFilePath: gitversion.yml

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"
          dotnet-quality: "ga"

      - name: Compose version
        id: compose
        shell: bash
        run: COMPOSED_VERSION=
             ${{ steps.gitversion.outputs.majorMinorPatch }}
             ${{ inputs.preview && '-preview-' || '' }}
             ${{ inputs.preview && github.run_id || '' }}
             echo "version=$COMPOSED_VERSION" >> $GITHUB_OUTPUT

      - name: Build library
        run: >
          dotnet build src/Indicators.csproj
          --configuration Release
          --property:Version="${{ steps.compose.version }}"
          --property:ContinuousIntegrationBuild=true
          -warnAsError

      - name: Pack for NuGet
        run: >
          dotnet pack src/Indicators.csproj
          --configuration Release
          --no-build
          --include-symbols
          --output NuGet
          -p:PackageVersion="${{ steps.compose.version }}"

      - name: Save NuGet package
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: NuGet

      - name: Show version
        run: |
          {
            echo "### Identified semantic version"
            echo "| Variable        | Value                                           |"
            echo "| --------------- | ----------------------------------------------- |"
            echo "| Major           | ${{ steps.gitversion.outputs.major }}           |"
            echo "| Minor           | ${{ steps.gitversion.outputs.minor }}           |"
            echo "| Patch           | ${{ steps.gitversion.outputs.patch }}           |"
            echo "| MajorMinorPatch | ${{ steps.gitversion.outputs.majorMinorPatch }} |"
            echo ""
            echo "Composed version: ${{ steps.compose.version }}"
          } >> $GITHUB_STEP_SUMMARY

  deploy:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    environment:
      name: ${{ inputs.environment }}
      url: "${{ vars.NUGET_DOWNLOAD_PREFIX }}${{ needs.build.outputs.version }}"

    steps:

      - name: Install NuGet tool
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_TOKEN }}
          nuget-version: '6.x'

      - name: Download NuGet package
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: NuGet

      - name: Pre-flight summary
        run: |
            echo ""
            echo "Configuration"
            echo "----------------------------------"
            echo "Environment ...... : ${{ inputs.environment }}"
            echo "NuGet Pub URL .... : ${{ vars.NUGET_PUBLISH_URL }}"
            echo "User URL prefix .. : ${{ vars.NUGET_DOWNLOAD_PREFIX }}"
            echo "Version ID ....... : ${{ needs.build.outputs.nuget-version }}"
            echo ""

      - name: Publish to package repo
        if: inputs.environment == 'deploy-me'
        run: |
          nuget sources Remove -Name "${{ inputs.environment }}"
          nuget sources Add -Name "${{ inputs.environment }}" -Source ${{ vars.NUGET_PUBLISH_URL }} -UserName DaveSkender -Password ${{ secrets.NUGET_TOKEN }} -NonInteractive
          nuget push NuGet/*.nupkg -src ${{ inputs.environment }} -ApiKey AZ

      - name: Tag and draft release note
        uses: ncipollo/release-action@v1
        if: inputs.environment == 'nuget'
        with:
          body: "Weâ€™ve released a new Stock Indicators for .NET NuGet package.  See [Skender.Stock.Indicators @ NuGet.org](https://www.nuget.org/packages/Skender.Stock.Indicators/${{ needs.build.outputs.nuget-version }}) for more information."
          generateReleaseNotes: true
          draft: true
          makeLatest: ${{ !inputs.preview }}
          prerelease: ${{ inputs.preview }}
          tag: ${{ needs.build.outputs.nuget-version }}
          commit: ${{ github.ref_name }}
