name: Test Indicators

on:
  push:
    branches:
      - "main"
      - "v[0-9]*"
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read  # Required for checkout
  checks: write   # Required for test results

jobs:
  quick-check:
    name: quick check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - run: npx markdownlint-cli2

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Build (core package only)
        run: >
          dotnet build src/Indicators.csproj
          --configuration Release
          --property:ContinuousIntegrationBuild=true
          -warnAsError

      - name: Lint .NET (core package only)
        run: dotnet format src/Indicators.csproj --verify-no-changes --severity info --no-restore

      - name: Lint Markdown
        run: npx markdownlint-cli2

      - name: Build (full)
        run: >
          dotnet build
          --configuration Release
          --property:ContinuousIntegrationBuild=true
          -warnAsError

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quick-check-build-artifacts
          path: |
            **/bin/
            **/obj/
          retention-days: 1

  lint-full:
    name: linting (full)
    runs-on: ubuntu-latest
    needs: quick-check

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Install Roslynator
        run: dotnet tool install -g roslynator.dotnet.cli

      - name: Build solution
        # note: Roslynator cannot use cached build
        run: >
          dotnet build
          --configuration Release
          --property:ContinuousIntegrationBuild=true

      - name: Run Roslynator analysis
        run: >
          roslynator analyze
          --properties TargetFramework=net9.0
          --severity-level info
          --verbosity normal
          --output ./test-results

      - name: Check .NET code formatting
        run: dotnet format --verify-no-changes --severity info --no-restore

      - name: Upload linting artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lint-full-build-artifacts
          path: ./test-results/**/*.xml
          retention-days: 1

  test-unit:
    name: unit tests
    runs-on: ubuntu-latest
    needs: quick-check

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: quick-check-build-artifacts

      - name: Test indicators
        run: >
          dotnet test
          --configuration Release
          --settings tests/tests.unit.runsettings
          --results-directory ./test-results
          --property:TestFramework=net9.0
          --verbosity normal
          --logger trx
          --collect:"XPlat Code Coverage"
          --no-build

      - name: Post unit test results
        uses: dorny/test-reporter@v2.1.1
        if: always()
        with:
          name: Unit test results
          path: ./test-results/**/*.trx
          reporter: dotnet-trx
          list-tests: failed
        continue-on-error: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-unit
          path: ./test-results/**/coverage.cobertura.xml
          retention-days: 1
        continue-on-error: true

      - name: Publish coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        if: success() && github.actor != 'dependabot[bot]'
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./test-results/**/coverage.cobertura.xml
        continue-on-error: true

  test-regression:
    name: regression tests
    runs-on: ubuntu-latest
    needs: quick-check

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: quick-check-build-artifacts

      - name: Test regression baselines
        run: >
          dotnet test
          --configuration Release
          --settings tests/tests.regression.runsettings
          --results-directory ./test-results-regression
          --property:TestFramework=net9.0
          --verbosity normal
          --logger trx
          --no-build

      - name: Post regression test results
        uses: dorny/test-reporter@v2.1.1
        if: always()
        with:
          name: Regression test results
          path: ./test-results-regression/**/*.trx
          reporter: dotnet-trx
          list-tests: failed
        continue-on-error: true
