name: Test Indicators

on:
  push:
    branches:
      - "main"
      - "v[0-9]*"
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read  # Required for checkout
  checks: write   # Required for test results

jobs:
  validate:
    name: validate code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ">=22"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Install npm dependencies
        run: npm ci

      - name: Check .NET code formatting
        run: dotnet format --verify-no-changes

      - name: Check Markdown linting
        run: npm run lint:md

      - name: Build library
        run: >
          dotnet build
          --configuration Release
          --property:ContinuousIntegrationBuild=true
          -warnAsError

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            src/bin/Release/
            tests/indicators/bin/Release/
            tests/integration/bin/Release/
            tests/public-api/bin/Release/
          retention-days: 1

  test-unit:
    name: unit tests
    runs-on: ubuntu-latest
    needs: validate

    env:
      TARGET_FRAMEWORK: net9.0

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Test indicators
        run: >
          dotnet test
          --configuration Release
          --settings tests/tests.unit.runsettings
          --results-directory ./test-results
          --property:TestFramework="${{ env.TARGET_FRAMEWORK }}"
          --no-build
          --verbosity normal
          --logger trx
          --collect:"XPlat Code Coverage"

      - name: Post unit test results
        uses: dorny/test-reporter@v2.1.0
        if: always()
        with:
          name: Unit test results
          path: ./test-results/**/*.trx
          reporter: dotnet-trx
        continue-on-error: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-unit
          path: ./test-results/**/coverage.cobertura.xml
          retention-days: 1

  test-regression:
    name: regression tests
    runs-on: ubuntu-latest
    needs: validate

    env:
      TARGET_FRAMEWORK: net9.0

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Test regression baselines
        run: >
          dotnet test
          --configuration Release
          --settings tests/tests.regression.runsettings
          --results-directory ./test-results-regression
          --property:TestFramework="${{ env.TARGET_FRAMEWORK }}"
          --no-build
          --verbosity normal
          --logger trx

      - name: Post regression test results
        uses: dorny/test-reporter@v2.1.0
        if: always()
        with:
          name: Regression test results
          path: ./test-results-regression/**/*.trx
          reporter: dotnet-trx
        continue-on-error: true

  publish-coverage:
    name: publish coverage
    runs-on: ubuntu-latest
    needs: test-unit
    if: success() && github.actor != 'dependabot[bot]'

    steps:
      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-unit

      - name: Publish coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./**/coverage.cobertura.xml
        continue-on-error: true
