name: Indicators

on:
  push:
    branches: ["main","v3"]

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: integration tests
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      actions: read
      checks: write

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        dotnet-version: ["6.x", "8.x"]

    env:

      # identifying primary configuration so only one reports coverage
      IS_PRIMARY: ${{ matrix.os == 'ubuntu-latest' && matrix.dotnet-version == '8.x' }}

    steps:

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET
        id: dotnet-new
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          dotnet-quality: "ga"

      - name: Build library
        run: >
          dotnet build
          --configuration Release
          --property:ContinuousIntegrationBuild=true
          -warnAsError

      - name: Test public API
        run: >
          dotnet test tests/external/public-api/Tests.PublicApi.csproj
          --configuration Release
          --no-build
          --verbosity normal
          --logger trx
          --results-directory ./test-other

      # the remaining steps are only needed from one primary instance

      - name: Test integrations
        if: env.IS_PRIMARY == 'true'
        env:
          ALPACA_KEY: ${{ secrets.ALPACA_KEY }}
          ALPACA_SECRET: ${{ secrets.ALPACA_SECRET }}
        run: >
          dotnet test tests/external/integration/Tests.Integration.csproj
          --configuration Release
          --no-build
          --verbosity normal
          --logger trx
          --results-directory ./test-other

      - name: Post test summary
        uses: dorny/test-reporter@v1
        if: env.IS_PRIMARY == 'true' && always()
        with:
          name: Test results
          path: ./test-other/**/*.trx
          reporter: dotnet-trx
