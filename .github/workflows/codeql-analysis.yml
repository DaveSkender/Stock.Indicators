name: "CodeQL"

on:
  push:
    branches: [master, ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
  schedule:
    - cron: '0 16 * * 3'

jobs:
  analyse:
    name: Analyse
    runs-on: windows-2019

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # this is required for GitVersion to analyze version number
    - name: Fetch all history for GitVersion
      run: git fetch --prune --unshallow

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: csharp

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.301'  
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with: 
        versionSpec: '5.3.7'

    # - name: Use GitVersion
    #   id: gitversion # step id used as reference for output values
    #   uses: gittools/actions/gitversion/execute@v0.9.2
    # - run: |
    #     echo "Major: ${{ steps.gitversion.outputs.major }}"
    #     echo "Minor: ${{ steps.gitversion.outputs.minor }}"
    #     echo "Patch: ${{ steps.gitversion.outputs.patch }}"
    #     echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
    #     echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
    #     echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
    #     echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
    #     echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
    #     echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
    #     echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
    #     echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
    #     echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
    #     echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
    #     echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
    #     echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
    #     echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
    #     echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
    #     echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
    #     echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
    #     echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
    #     echo "Sha: ${{ steps.gitversion.outputs.sha }}"
    #     echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
    #     echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
    #     echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
    #     echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
    #     echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
    #     echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
    #     echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
    #     echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
    #     echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"

    - name: Restore packages
      run: dotnet restore

    - name: Build
      run: dotnet build --disable-parallel --configuration Release --no-restore

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
