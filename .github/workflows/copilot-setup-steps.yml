name: Copilot Environment Setup

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Python for Spec-Kit
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Setup uv package manager
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="$HOME/.cargo/bin:$PATH"
        continue-on-error: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.265.0
        with:
          ruby-version: 3.3
          bundler-cache: true
          working-directory: docs

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ">=22.21.0"
          cache: "npm"
          cache-dependency-path: package-lock.json
        continue-on-error: true

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Install .NET & NPM global tools
        run: |
          dotnet tool install --global dotnet-format
          dotnet tool install --global roslynator.dotnet.cli
          dotnet tool install --global dotnet-outdated-tool
          dotnet tool install --global dotnet-reportgenerator-globaltool
          npm install --global @angular/cli
        continue-on-error: true

      - name: Install Spec-Kit CLI
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          uv tool install --force specify-cli --from git+https://github.com/github/spec-kit.git

          export PATH="$HOME/.local/bin:$PATH"
          specify --help || echo "Specify help not available"
        continue-on-error: true

      - name: Restore packages
        run: |
          dotnet restore && npm ci
        continue-on-error: true

      - name: Build .NET Solution
        run: |
          dotnet build --no-restore
        continue-on-error: true

      - name: Test environment
        run: |
          dotnet test --no-build --verbosity minimal
        continue-on-error: true

      - name: Environment summary
        run: |
          echo "## Copilot Environment Setup Complete ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Development Tools" >> $GITHUB_STEP_SUMMARY
          echo "- Repository: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- .NET SDKs: $(dotnet --list-sdks | wc -l) versions available" >> $GITHUB_STEP_SUMMARY
          echo "- .NET Tools: $(dotnet tool list --global | wc -l) installed" >> $GITHUB_STEP_SUMMARY
          echo "- Python: $(python --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: $(node --version 2>/dev/null || echo 'Not available')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Spec-Kit Integration" >> $GITHUB_STEP_SUMMARY
          echo "- Spec-Kit CLI: $(~/.local/bin/specify --version 2>/dev/null || echo 'Installation pending')" >> $GITHUB_STEP_SUMMARY
          echo "- Constitution: âœ… Available at \`.specify/memory/constitution.md\`" >> $GITHUB_STEP_SUMMARY
          echo "- Specifications: âœ… Available at \`specs/\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Commands" >> $GITHUB_STEP_SUMMARY
          echo "- \`/constitution\` - Review/update project principles" >> $GITHUB_STEP_SUMMARY
          echo "- \`/specify\` - Create feature specifications" >> $GITHUB_STEP_SUMMARY
          echo "- \`/plan\` - Define implementation approach" >> $GITHUB_STEP_SUMMARY
          echo "- \`/tasks\` - Generate actionable task breakdown" >> $GITHUB_STEP_SUMMARY
          echo "- \`/implement\` - Execute planned implementation" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
