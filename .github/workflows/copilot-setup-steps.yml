name: Copilot Environment Setup

on:
  workflow_dispatch:

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    name: Configure Copilot Development Environment

    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"
          dotnet-quality: "ga"

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Restore .NET dependencies
        run: dotnet restore Stock.Indicators.sln
        
      - name: Install essential development tools
        run: |
          # Install core .NET tools for development (reduced set for faster setup)
          dotnet tool install --global dotnet-format
          dotnet tool install --global dotnet-outdated-tool
        continue-on-error: true
          
      - name: Install optional development tools
        run: |
          # Additional tools (install in background, continue on error for speed)
          dotnet tool install --global BenchmarkDotNet.Tool
          dotnet tool install --global dotnet-reportgenerator-globaltool
        continue-on-error: true
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          
      - name: Install essential web tools
        run: |
          npm install -g markdownlint-cli
        continue-on-error: true
          
      - name: Configure Git for development
        run: |
          git config --global user.email "copilot@github.com"
          git config --global user.name "GitHub Copilot"
          git config --global init.defaultBranch main
          git config --global pull.rebase false
          
      - name: Quick build verification
        run: |
          dotnet build --configuration Release --no-restore --verbosity minimal
        continue-on-error: true
          
      - name: Setup MCP servers configuration
        run: |
          mkdir -p ~/.config/copilot/mcp
          cat > ~/.config/copilot/mcp/config.json << 'EOF'
          {
            "servers": {
              "filesystem": {
                "command": "npx",
                "args": ["-y", "@modelcontextprotocol/server-filesystem", "${GITHUB_WORKSPACE}"],
                "description": "File system access for repository navigation"
              },
              "git": {
                "command": "npx",
                "args": ["-y", "@modelcontextprotocol/server-git", "${GITHUB_WORKSPACE}"],
                "description": "Git repository operations and history"
              }
            }
          }
          EOF
          
      - name: Create environment summary
        run: |
          echo "## GitHub Copilot Development Environment Setup Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Core Tools Installed" >> $GITHUB_STEP_SUMMARY
          echo "- .NET SDK: $(dotnet --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Git: $(git --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Environment ready for Copilot development: âœ…" >> $GITHUB_STEP_SUMMARY
