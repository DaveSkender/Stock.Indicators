name: Copilot Environment Setup
description: Set up development environment for GitHub Copilot coding agents working on Stock Indicators for .NET

permissions:
  contents: read
on:
  workflow_dispatch:
  schedule:
    # Run weekly to keep environment fresh
    - cron: '0 2 * * 1'

jobs:
  setup-copilot-environment:
    runs-on: ubuntu-latest
    name: Configure Copilot Development Environment
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
            9.0.x
          dotnet-quality: 'ga'
          
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Restore .NET dependencies
        run: dotnet restore Stock.Indicators.sln
        
      - name: Install development tools
        run: |
          # Install global .NET tools useful for development
          dotnet tool install --global dotnet-ef
          dotnet tool install --global dotnet-dump
          dotnet tool install --global dotnet-trace
          dotnet tool install --global dotnet-counters
          dotnet tool install --global dotnet-format
          dotnet tool install --global dotnet-outdated-tool
          
      - name: Install BenchmarkDotNet CLI
        run: dotnet tool install --global BenchmarkDotNet.Tool
        
      - name: Install code quality tools
        run: |
          # Security analysis
          dotnet tool install --global security-scan
          # Code coverage
          dotnet tool install --global dotnet-reportgenerator-globaltool
          # Dependency analysis  
          dotnet tool install --global snitch
          
      - name: Setup Node.js for web tools
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install web development tools
        run: |
          npm install -g markdownlint-cli
          npm install -g alex
          npm install -g write-good
          
      - name: Install financial data tools
        run: |
          # Install Python for financial data analysis (optional)
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install pandas numpy yfinance alpha-vantage quandl
          
      - name: Install mathematical computing tools
        run: |
          # R for statistical analysis (optional for advanced indicators)
          sudo apt-get install -y r-base
          # Octave for mathematical computations
          sudo apt-get install -y octave
          
      - name: Setup development databases
        run: |
          # SQLite for testing financial data storage
          sudo apt-get install -y sqlite3
          
      - name: Configure Git for development
        run: |
          git config --global user.email "copilot@github.com"
          git config --global user.name "GitHub Copilot"
          git config --global init.defaultBranch main
          git config --global pull.rebase false
          
      - name: Build and test solution
        run: |
          dotnet build Stock.Indicators.sln --configuration Release
          dotnet test Stock.Indicators.sln --configuration Release --no-build --verbosity normal
          
      - name: Run performance benchmarks (sample)
        run: |
          cd tests/performance
          dotnet run --configuration Release --framework net9.0 -- --filter "*Sma*" --memory --statsColumn Q1,Q3
          

      - name: Setup MCP servers configuration
        run: |
          mkdir -p ~/.config/copilot/mcp
          cat > ~/.config/copilot/mcp/config.json << 'EOF'
          {
            "servers": {
              "filesystem": {
                "command": "npx",
                "args": ["-y", "@modelcontextprotocol/server-filesystem", "/home/runner/work/Stock.Indicators/Stock.Indicators"],
                "description": "File system access for repository navigation"
              },
              "git": {
                "command": "npx",
                "args": ["-y", "@modelcontextprotocol/server-git", "/home/runner/work/Stock.Indicators/Stock.Indicators"],
                "description": "Git repository operations and history"
              }
            }
          }
          EOF
          
      - name: Create environment summary
        run: |
          echo "## GitHub Copilot Development Environment Setup Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installed Tools" >> $GITHUB_STEP_SUMMARY
          echo "- .NET SDK: $(dotnet --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Python: $(python3 --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Git: $(git --version)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### .NET Global Tools" >> $GITHUB_STEP_SUMMARY
          dotnet tool list --global >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Project Status" >> $GITHUB_STEP_SUMMARY
          echo "- Solution builds successfully: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- All tests pass: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Performance benchmarks available: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- MCP servers configured: ✅" >> $GITHUB_STEP_SUMMARY