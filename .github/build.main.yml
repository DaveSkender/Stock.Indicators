trigger:
  - main

pr:
  - main

pool:
  name: Azure Pipelines
  vmImage: "ubuntu-latest"

workspace:
    clean: all

variables:
  BuildConfiguration: "Release"

steps:
  - task: UseDotNet@2
    displayName: "use .NET SDK 5.0.x"
    inputs:
      version: 5.0.x

  - task: NuGetToolInstaller@1
    displayName: "use NuGet 5.10.x"
    inputs:
      versionSpec: 5.10.x
      checkLatest: false

  - task: DotNetCoreCLI@2
    displayName: "use GitVersion"
    inputs:
      command: custom
      custom: tool
      arguments: "install -g gitversion.tool --version 5.6.10"

  - task: DotNetCoreCLI@2
    displayName: "get version number"
    inputs:
      command: custom
      custom: gitversion
      arguments: "/output buildserver"

  - task: DotNetCoreCLI@2
    displayName: "create assembly info"
    inputs:
      command: "custom"
      custom: "gitversion"
      arguments: "/updateassemblyinfo AssemblyInfo.cs /ensureassemblyinfo"

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      projects: "**/*.csproj"
      arguments: "--configuration $(BuildConfiguration) /p:Version=$(GitVersion.NuGetVersion)"

  - task: DotNetCoreCLI@2
    displayName: "test indicators"
    inputs:
      command: test
      testRunTitle: "Indicator Tests"
      projects: "tests/indicators/Tests.Indicators.csproj"
      arguments: '--configuration $(BuildConfiguration) --no-restore --no-build --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
      publishTestResults: true

  - task: DotNetCoreCLI@2
    displayName: "test external/other"
    inputs:
      command: test
      testRunTitle: "External Tests"
      projects: "tests/external/Tests.Other.csproj"
      arguments: "--configuration $(BuildConfiguration) --no-restore --no-build /p:CollectCoverage=false"
      publishTestResults: true

  - task: PublishCodeCoverageResults@1
    displayName: "publish code coverage"
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(Agent.TempDirectory)/**/coverage.cobertura.xml"

  - task: DotNetCoreCLI@2
    displayName: "pack for NuGet"
    inputs:
      command: "pack"
      packagesToPack: "src/Indicators.csproj"
      nobuild: true
      versioningScheme: "byEnvVar"
      versionEnvVar: "GitVersion.NuGetVersion"

  - task: CopyFiles@2
    displayName: "stage artifacts"
    inputs:
      SourceFolder: "src"
      Contents: "**/*.nupkg"
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      CleanTargetFolder: true
      OverWrite: true
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: "save artifacts"
    inputs:
      ArtifactName: packages
