trigger:
  - master

pr:
  - master

pool:
  name: Azure Pipelines
  vmImage: "windows-2019"

variables:
  BuildConfiguration: "Release"

steps:
  - task: UseDotNet@2
    displayName: "use .Net Core SDK 3.1.x"
    inputs:
      version: 3.1.x

  - task: DotNetCoreCLI@2
    displayName: "use GitVersion"
    inputs:
      command: custom
      custom: tool
      arguments: "install -g gitversion.tool --version 5.3.7"

  - task: DotNetCoreCLI@2
    displayName: "run GitVersion"
    inputs:
      command: custom
      custom: gitversion
      arguments: "/output buildserver"

  - task: DotNetCoreCLI@2
    displayName: "restore packages"
    inputs:
      command: restore
      projects: "**/*.csproj"
      vstsFeed: "5123ca47-74f2-4d67-a5d4-c4d90b8d670a/96cedadb-756b-4db1-8a0d-029c7ed294c7"

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      projects: "**/*.csproj"
      arguments: "--disable-parallel --configuration $(BuildConfiguration) --no-restore /p:Version=$(GitVersion.NuGetVersion)"
      vstsFeed: "5123ca47-74f2-4d67-a5d4-c4d90b8d670a/96cedadb-756b-4db1-8a0d-029c7ed294c7"

  - task: DotNetCoreCLI@2
    displayName: "test internal"
    inputs:
      command: test
      projects: "**/Tests.Indicators.csproj"
      arguments: "--configuration $(BuildConfiguration) --no-restore /p:Version=$(GitVersion.NuGetVersion) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura"
      testRunTitle: "Library Internal Tests"
      vstsFeed: "5123ca47-74f2-4d67-a5d4-c4d90b8d670a/96cedadb-756b-4db1-8a0d-029c7ed294c7"

  - task: DotNetCoreCLI@2
    displayName: "test external"
    inputs:
      command: test
      projects: "**/Tests.External.csproj"
      arguments: "--configuration $(BuildConfiguration) --no-restore  /p:Version=$(GitVersion.NuGetVersion) /p:CollectCoverage=false"
      publishTestResults: false
      testRunTitle: "Library External Tests"
      vstsFeed: "5123ca47-74f2-4d67-a5d4-c4d90b8d670a/96cedadb-756b-4db1-8a0d-029c7ed294c7"

  - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
    displayName: "format code coverage"
    inputs:
      reports: "**/coverage.cobertura.xml"
      targetdir: "$(Build.ArtifactStagingDirectory)/TestResults"
      reporttypes: "HtmlInline_AzurePipelines;Cobertura;Badges"
      title: "Stock.Indicators Library Tests"

  - task: PublishCodeCoverageResults@1
    displayName: "publish code coverage"
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(Build.ArtifactStagingDirectory)/TestResults/cobertura.xml"
      reportDirectory: "$(Build.ArtifactStagingDirectory)/TestResults"

  - task: DotNetCoreCLI@2
    displayName: "pack for NuGet"
    inputs:
      command: pack
      vstsFeed: "5123ca47-74f2-4d67-a5d4-c4d90b8d670a/96cedadb-756b-4db1-8a0d-029c7ed294c7"
      packagesToPack: indicators/Indicators.csproj
      versioningScheme: byEnvVar
      versionEnvVar: GitVersion.NuGetVersion

  - task: CopyFiles@2
    displayName: "stage artifacts"
    inputs:
      SourceFolder: indicators
      Contents: "**/*.nupkg"
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      CleanTargetFolder: true
      OverWrite: true
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: "save artifacts"
    inputs:
      ArtifactName: packages
